// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Motax.Models;

#nullable disable

namespace Motax.Migrations
{
    [DbContext(typeof(MotaxContext))]
    [Migration("20240721105750_AddCarRegistrations")]
    partial class AddCarRegistrations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("Dob")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gender")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Password")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Phone")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__Accounts__3214EC076BF4BDA6");

                    b.HasIndex("RoleId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("Motax.Models.Accessory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDay")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<double>("DescriptionUnitPrice")
                        .HasColumnType("float");

                    b.Property<double>("Discount")
                        .HasColumnType("float");

                    b.Property<string>("ImageMultiple")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageSingle")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int");

                    b.Property<string>("TypeCode")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdateDay")
                        .HasColumnType("datetime");

                    b.HasKey("Id")
                        .HasName("PK__Accessor__3214EC07DE0E68AB");

                    b.HasIndex("BrandId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Accessories");
                });

            modelBuilder.Entity("Motax.Models.Blog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("CreateDay")
                        .HasColumnType("date");

                    b.Property<string>("ImageSingle")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateOnly>("UpdateDay")
                        .HasColumnType("date");

                    b.HasKey("Id")
                        .HasName("PK__Blogs__3214EC0752C0A940");

                    b.HasIndex("AuthorId");

                    b.ToTable("Blogs");
                });

            modelBuilder.Entity("Motax.Models.BlogDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BlogId")
                        .HasColumnType("int");

                    b.Property<string>("ContentBlogs")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContentBlogsUnit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK__BlogDeta__3214EC07D05170DA");

                    b.HasIndex("BlogId");

                    b.ToTable("BlogDetails");
                });

            modelBuilder.Entity("Motax.Models.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ContactPerson")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Slug")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Brands__3214EC078C1AE7AE");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("Motax.Models.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BodyType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("BrandId")
                        .HasColumnType("int");

                    b.Property<string>("CarFeatures")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Condition")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateOnly?>("CreateDay")
                        .HasColumnType("date");

                    b.Property<int?>("Cylinders")
                        .HasColumnType("int");

                    b.Property<int?>("DealerId")
                        .HasColumnType("int");

                    b.Property<int?>("Doors")
                        .HasColumnType("int");

                    b.Property<string>("DriverAirbag")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EngineSize")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FuelType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ImageMultiple")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageSingle")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("Mileage")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<double?>("Price")
                        .HasColumnType("float");

                    b.Property<string>("PriceType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Transmission")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateOnly?>("UpdateDay")
                        .HasColumnType("date");

                    b.Property<string>("Vin")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("VIN");

                    b.Property<int?>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Cars__3214EC070AA6E16B");

                    b.HasIndex("BrandId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("DealerId");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("Motax.Models.CarRegistration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InspectionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InsuranceDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LicensePlate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("RegistrationFee")
                        .HasColumnType("float");

                    b.Property<string>("RegistrationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TaxAmount")
                        .HasColumnType("float");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("UserId");

                    b.ToTable("CarRegistrations");
                });

            modelBuilder.Entity("Motax.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Slug")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateOnly>("StarDay")
                        .HasColumnType("date");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<DateOnly>("UpdateDay")
                        .HasColumnType("date");

                    b.HasKey("Id")
                        .HasName("PK__Categori__3214EC07B9F0A21B");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Motax.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessoriesId")
                        .HasColumnType("int");

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<string>("Comment1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CommentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccessoriesId");

                    b.HasIndex("CarId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("Motax.Models.CommentBlog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BlogId")
                        .HasColumnType("int");

                    b.Property<string>("CommentBlogs")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CommentDate")
                        .HasColumnType("datetime");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__CommentB__3214EC075CE29F22");

                    b.HasIndex("BlogId");

                    b.HasIndex("UserId");

                    b.ToTable("CommentBlogs");
                });

            modelBuilder.Entity("Motax.Models.Compare", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CompareDate")
                        .HasColumnType("datetime");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Compares__3214EC0761313135");

                    b.HasIndex("CarId");

                    b.HasIndex("UserId");

                    b.ToTable("Compares");
                });

            modelBuilder.Entity("Motax.Models.ContactMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("DealerId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DealerId");

                    b.ToTable("ContactMessages");
                });

            modelBuilder.Entity("Motax.Models.Dealer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("BrandId")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ImageBackground")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Dealers__3214EC07D9229A6B");

                    b.HasIndex("BrandId");

                    b.ToTable("Dealers");
                });

            modelBuilder.Entity("Motax.Models.DealerDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AvatarImage")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ConsultantAvatar")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ConsultantName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CoverImage")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("DealerId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__DealerDe__3214EC07AFA984F3");

                    b.HasIndex("DealerId");

                    b.ToTable("DealerDetail", (string)null);
                });

            modelBuilder.Entity("Motax.Models.Discount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("CreateDay")
                        .HasColumnType("date");

                    b.Property<double>("DiscountPercentage")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateOnly>("UpdateDay")
                        .HasColumnType("date");

                    b.HasKey("Id")
                        .HasName("PK__Discount__3214EC079B649163");

                    b.ToTable("Discounts");
                });

            modelBuilder.Entity("Motax.Models.Inventory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessoriesId")
                        .HasColumnType("int");

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<int>("DealerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastUpdate")
                        .HasColumnType("datetime");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int");

                    b.Property<string>("WarehouseLocation")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Inventor__3214EC07BC8200AE");

                    b.HasIndex("AccessoriesId");

                    b.HasIndex("CarId");

                    b.HasIndex("DealerId");

                    b.ToTable("Inventory", (string)null);
                });

            modelBuilder.Entity("Motax.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDay")
                        .HasColumnType("datetime");

                    b.Property<int>("DealerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DeliveryDate")
                        .HasColumnType("datetime");

                    b.Property<string>("HowToPay")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("HowToTransport")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Note")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("OrderCode")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<double>("TotalAmount")
                        .HasColumnType("float");

                    b.Property<double>("TransportFee")
                        .HasColumnType("float");

                    b.Property<DateTime>("UpdateDay")
                        .HasColumnType("datetime");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Orders__3214EC070B6D9653");

                    b.HasIndex("AccountId");

                    b.HasIndex("CarId");

                    b.HasIndex("DealerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Motax.Models.OrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessoriesId")
                        .HasColumnType("int");

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<double>("Discount")
                        .HasColumnType("float");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__OrderDet__3214EC07D1F4C80D");

                    b.HasIndex("AccessoriesId");

                    b.HasIndex("CarId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("Motax.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Roles__3214EC07AAF313BD");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Motax.Models.Voucher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("CreateDay")
                        .HasColumnType("date");

                    b.Property<double>("DiscountPercentage")
                        .HasColumnType("float");

                    b.Property<DateOnly>("UpdateDay")
                        .HasColumnType("date");

                    b.Property<string>("VoucherCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__Vouchers__3214EC07A929DF11");

                    b.ToTable("Vouchers");
                });

            modelBuilder.Entity("Motax.Models.Wishlist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessoriesId")
                        .HasColumnType("int");

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<DateTime>("SelectDate")
                        .HasColumnType("datetime");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Wishlist__3214EC07AA5D153C");

                    b.HasIndex("AccessoriesId");

                    b.HasIndex("CarId");

                    b.HasIndex("UserId");

                    b.ToTable("Wishlist", (string)null);
                });

            modelBuilder.Entity("Account", b =>
                {
                    b.HasOne("Motax.Models.Role", "Role")
                        .WithMany("Accounts")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK__Accounts__RoleId__398D8EEE");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Motax.Models.Accessory", b =>
                {
                    b.HasOne("Motax.Models.Brand", "Brand")
                        .WithMany("Accessories")
                        .HasForeignKey("BrandId")
                        .IsRequired()
                        .HasConstraintName("FK__Accessori__Brand__4BAC3F29");

                    b.HasOne("Motax.Models.Category", "Category")
                        .WithMany("Accessories")
                        .HasForeignKey("CategoryId")
                        .IsRequired()
                        .HasConstraintName("FK__Accessori__Categ__4CA06362");

                    b.Navigation("Brand");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Motax.Models.Blog", b =>
                {
                    b.HasOne("Account", "Author")
                        .WithMany("Blogs")
                        .HasForeignKey("AuthorId")
                        .IsRequired()
                        .HasConstraintName("FK__Blogs__AuthorId__6E01572D");

                    b.Navigation("Author");
                });

            modelBuilder.Entity("Motax.Models.BlogDetail", b =>
                {
                    b.HasOne("Motax.Models.Blog", "Blog")
                        .WithMany("BlogDetails")
                        .HasForeignKey("BlogId")
                        .IsRequired()
                        .HasConstraintName("FK__BlogDetai__BlogI__70DDC3D8");

                    b.Navigation("Blog");
                });

            modelBuilder.Entity("Motax.Models.Car", b =>
                {
                    b.HasOne("Motax.Models.Brand", "Brand")
                        .WithMany("Cars")
                        .HasForeignKey("BrandId")
                        .HasConstraintName("FK__Cars__BrandId__46E78A0C");

                    b.HasOne("Motax.Models.Category", "Category")
                        .WithMany("Cars")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK__Cars__CategoryId__47DBAE45");

                    b.HasOne("Motax.Models.Dealer", "Dealer")
                        .WithMany("Cars")
                        .HasForeignKey("DealerId")
                        .HasConstraintName("FK__Cars__DealerId__48CFD27E");

                    b.Navigation("Brand");

                    b.Navigation("Category");

                    b.Navigation("Dealer");
                });

            modelBuilder.Entity("Motax.Models.CarRegistration", b =>
                {
                    b.HasOne("Motax.Models.Car", "Car")
                        .WithMany()
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Account", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Motax.Models.Comment", b =>
                {
                    b.HasOne("Motax.Models.Accessory", "Accessories")
                        .WithMany("Comments")
                        .HasForeignKey("AccessoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Motax.Models.Car", "Car")
                        .WithMany("Comments")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Accessories");

                    b.Navigation("Car");
                });

            modelBuilder.Entity("Motax.Models.CommentBlog", b =>
                {
                    b.HasOne("Motax.Models.Blog", "Blog")
                        .WithMany("CommentBlogs")
                        .HasForeignKey("BlogId")
                        .IsRequired()
                        .HasConstraintName("FK__CommentBl__BlogI__73BA3083");

                    b.HasOne("Account", "User")
                        .WithMany("CommentBlogs")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__CommentBl__UserI__74AE54BC");

                    b.Navigation("Blog");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Motax.Models.Compare", b =>
                {
                    b.HasOne("Motax.Models.Car", "Car")
                        .WithMany("Compares")
                        .HasForeignKey("CarId")
                        .IsRequired()
                        .HasConstraintName("FK__Compares__CarId__628FA481");

                    b.HasOne("Account", "User")
                        .WithMany("Compares")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Compares__UserId__619B8048");

                    b.Navigation("Car");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Motax.Models.ContactMessage", b =>
                {
                    b.HasOne("Motax.Models.Dealer", "Dealer")
                        .WithMany("ContactMessages")
                        .HasForeignKey("DealerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dealer");
                });

            modelBuilder.Entity("Motax.Models.Dealer", b =>
                {
                    b.HasOne("Motax.Models.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId");

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("Motax.Models.DealerDetail", b =>
                {
                    b.HasOne("Motax.Models.Dealer", "Dealer")
                        .WithMany("DealerDetails")
                        .HasForeignKey("DealerId")
                        .IsRequired()
                        .HasConstraintName("FK__DealerDet__Deale__3E52440B");

                    b.Navigation("Dealer");
                });

            modelBuilder.Entity("Motax.Models.Inventory", b =>
                {
                    b.HasOne("Motax.Models.Accessory", "Accessories")
                        .WithMany("Inventories")
                        .HasForeignKey("AccessoriesId")
                        .IsRequired()
                        .HasConstraintName("FK__Inventory__Acces__5165187F");

                    b.HasOne("Motax.Models.Car", "Car")
                        .WithMany("Inventories")
                        .HasForeignKey("CarId")
                        .IsRequired()
                        .HasConstraintName("FK__Inventory__CarId__5070F446");

                    b.HasOne("Motax.Models.Dealer", "Dealer")
                        .WithMany("Inventories")
                        .HasForeignKey("DealerId")
                        .IsRequired()
                        .HasConstraintName("FK__Inventory__Deale__4F7CD00D");

                    b.Navigation("Accessories");

                    b.Navigation("Car");

                    b.Navigation("Dealer");
                });

            modelBuilder.Entity("Motax.Models.Order", b =>
                {
                    b.HasOne("Account", "Account")
                        .WithMany("Orders")
                        .HasForeignKey("AccountId")
                        .IsRequired()
                        .HasConstraintName("FK_Orders_AccountId");

                    b.HasOne("Motax.Models.Car", "Car")
                        .WithMany()
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Motax.Models.Dealer", "Dealer")
                        .WithMany()
                        .HasForeignKey("DealerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Car");

                    b.Navigation("Dealer");
                });

            modelBuilder.Entity("Motax.Models.OrderDetail", b =>
                {
                    b.HasOne("Motax.Models.Accessory", "Accessories")
                        .WithMany("OrderDetails")
                        .HasForeignKey("AccessoriesId")
                        .IsRequired()
                        .HasConstraintName("FK__OrderDeta__Acces__59FA5E80");

                    b.HasOne("Motax.Models.Car", "Car")
                        .WithMany("OrderDetails")
                        .HasForeignKey("CarId")
                        .IsRequired()
                        .HasConstraintName("FK__OrderDeta__CarId__59063A47");

                    b.HasOne("Motax.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("FK__OrderDeta__Order__5812160E");

                    b.Navigation("Accessories");

                    b.Navigation("Car");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("Motax.Models.Wishlist", b =>
                {
                    b.HasOne("Motax.Models.Accessory", "Accessories")
                        .WithMany("Wishlists")
                        .HasForeignKey("AccessoriesId")
                        .IsRequired()
                        .HasConstraintName("FK__Wishlist__Access__6B24EA82");

                    b.HasOne("Motax.Models.Car", "Car")
                        .WithMany("Wishlists")
                        .HasForeignKey("CarId")
                        .IsRequired()
                        .HasConstraintName("FK__Wishlist__CarId__6A30C649");

                    b.HasOne("Account", "User")
                        .WithMany("Wishlists")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Wishlist__UserId__693CA210");

                    b.Navigation("Accessories");

                    b.Navigation("Car");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Account", b =>
                {
                    b.Navigation("Blogs");

                    b.Navigation("CommentBlogs");

                    b.Navigation("Compares");

                    b.Navigation("Orders");

                    b.Navigation("Wishlists");
                });

            modelBuilder.Entity("Motax.Models.Accessory", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Inventories");

                    b.Navigation("OrderDetails");

                    b.Navigation("Wishlists");
                });

            modelBuilder.Entity("Motax.Models.Blog", b =>
                {
                    b.Navigation("BlogDetails");

                    b.Navigation("CommentBlogs");
                });

            modelBuilder.Entity("Motax.Models.Brand", b =>
                {
                    b.Navigation("Accessories");

                    b.Navigation("Cars");
                });

            modelBuilder.Entity("Motax.Models.Car", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Compares");

                    b.Navigation("Inventories");

                    b.Navigation("OrderDetails");

                    b.Navigation("Wishlists");
                });

            modelBuilder.Entity("Motax.Models.Category", b =>
                {
                    b.Navigation("Accessories");

                    b.Navigation("Cars");
                });

            modelBuilder.Entity("Motax.Models.Dealer", b =>
                {
                    b.Navigation("Cars");

                    b.Navigation("ContactMessages");

                    b.Navigation("DealerDetails");

                    b.Navigation("Inventories");
                });

            modelBuilder.Entity("Motax.Models.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("Motax.Models.Role", b =>
                {
                    b.Navigation("Accounts");
                });
#pragma warning restore 612, 618
        }
    }
}
